import{a as M,C as U,R as L,H as K,f as z,g as C,d as E,i as R,b as D,S,A as V}from"./index-c4e8aa60.js";class q extends M{constructor(e){super(e)}async generate(e,t,n){var g;const r=[],a=[];let o;Array.isArray(t)?o={stop:t}:t!=null&&t.timeout&&!t.signal?o={...t,signal:AbortSignal.timeout(t.timeout)}:o=t??{};const c=await U.configure(n,this.callbacks,{verbose:this.verbose}),m={invocation_params:this==null?void 0:this.invocationParams()},s=await(c==null?void 0:c.handleChatModelStart({name:this._llmType()},e,void 0,void 0,m));try{const p=await Promise.all(e.map(y=>this._generate(y,o,s)));for(const y of p)y.llmOutput&&a.push(y.llmOutput),r.push(y.generations)}catch(p){throw await(s==null?void 0:s.handleLLMError(p)),p}const i={generations:r,llmOutput:a.length?(g=this._combineLLMOutput)==null?void 0:g.call(this,...a):void 0};return await(s==null?void 0:s.handleLLMEnd(i)),Object.defineProperty(i,L,{value:s?{runId:s==null?void 0:s.runId}:void 0,configurable:!0}),i}invocationParams(){return{}}_modelType(){return"base_chat_model"}async generatePrompt(e,t,n){const r=e.map(a=>a.toChatMessages());return this.generate(r,t,n)}async call(e,t,n){return(await this.generate([e],t,n)).generations[0][0].message}async callPrompt(e,t,n){const r=e.toChatMessages();return this.call(r,t,n)}async predictMessages(e,t,n){return this.call(e,t,n)}async predict(e,t,n){const r=new K(e);return(await this.call([r],t,n)).text}}function j(b){switch(b){case"system":return"system";case"ai":return"assistant";case"human":return"user";default:throw new Error(`Unknown message type: ${b}`)}}function B(b,e){switch(b){case"user":return new K(e);case"assistant":return new V(e);case"system":return new S(e);default:return new D(e,b??"unknown")}}class Y extends q{get callKeys(){return["stop","signal","timeout","options"]}constructor(e,t){var m,s,i,g,p;super(e??{}),Object.defineProperty(this,"temperature",{enumerable:!0,configurable:!0,writable:!0,value:1}),Object.defineProperty(this,"topP",{enumerable:!0,configurable:!0,writable:!0,value:1}),Object.defineProperty(this,"frequencyPenalty",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"presencePenalty",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"n",{enumerable:!0,configurable:!0,writable:!0,value:1}),Object.defineProperty(this,"logitBias",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"modelName",{enumerable:!0,configurable:!0,writable:!0,value:"gpt-3.5-turbo"}),Object.defineProperty(this,"modelKwargs",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"stop",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"timeout",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"streaming",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"maxTokens",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"azureOpenAIApiVersion",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"azureOpenAIApiKey",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"azureOpenAIApiInstanceName",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"azureOpenAIApiDeploymentName",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"clientConfig",{enumerable:!0,configurable:!0,writable:!0,value:void 0});const n=(e==null?void 0:e.openAIApiKey)??(typeof process<"u"?(m=process.env)==null?void 0:m.OPENAI_API_KEY:void 0),r=(e==null?void 0:e.azureOpenAIApiKey)??(typeof process<"u"?(s=process.env)==null?void 0:s.AZURE_OPENAI_API_KEY:void 0);if(!r&&!n)throw new Error("(Azure) OpenAI API key not found");const a=(e==null?void 0:e.azureOpenAIApiInstanceName)??(typeof process<"u"?(i=process.env)==null?void 0:i.AZURE_OPENAI_API_INSTANCE_NAME:void 0),o=(e==null?void 0:e.azureOpenAIApiDeploymentName)??(typeof process<"u"?(g=process.env)==null?void 0:g.AZURE_OPENAI_API_DEPLOYMENT_NAME:void 0),c=(e==null?void 0:e.azureOpenAIApiVersion)??(typeof process<"u"?(p=process.env)==null?void 0:p.AZURE_OPENAI_API_VERSION:void 0);if(this.modelName=(e==null?void 0:e.modelName)??this.modelName,this.modelKwargs=(e==null?void 0:e.modelKwargs)??{},this.timeout=e==null?void 0:e.timeout,this.temperature=(e==null?void 0:e.temperature)??this.temperature,this.topP=(e==null?void 0:e.topP)??this.topP,this.frequencyPenalty=(e==null?void 0:e.frequencyPenalty)??this.frequencyPenalty,this.presencePenalty=(e==null?void 0:e.presencePenalty)??this.presencePenalty,this.maxTokens=e==null?void 0:e.maxTokens,this.n=(e==null?void 0:e.n)??this.n,this.logitBias=e==null?void 0:e.logitBias,this.stop=e==null?void 0:e.stop,this.streaming=(e==null?void 0:e.streaming)??!1,this.azureOpenAIApiVersion=c,this.azureOpenAIApiKey=r,this.azureOpenAIApiInstanceName=a,this.azureOpenAIApiDeploymentName=o,this.streaming&&this.n>1)throw new Error("Cannot stream results when n > 1");if(this.azureOpenAIApiKey){if(!this.azureOpenAIApiInstanceName)throw new Error("Azure OpenAI API instance name not found");if(!this.azureOpenAIApiDeploymentName)throw new Error("Azure OpenAI API deployment name not found");if(!this.azureOpenAIApiVersion)throw new Error("Azure OpenAI API version not found")}this.clientConfig={apiKey:n,...t}}invocationParams(){return{model:this.modelName,temperature:this.temperature,top_p:this.topP,frequency_penalty:this.frequencyPenalty,presence_penalty:this.presencePenalty,max_tokens:this.maxTokens===-1?void 0:this.maxTokens,n:this.n,logit_bias:this.logitBias,stop:this.stop,stream:this.streaming,...this.modelKwargs}}_identifyingParams(){return{model_name:this.modelName,...this.invocationParams(),...this.clientConfig}}identifyingParams(){return this._identifyingParams()}async _generate(e,t,n){var p,y;const r={};if(this.stop&&(t!=null&&t.stop))throw new Error("Stop found in input and default params");const a=this.invocationParams();a.stop=(t==null?void 0:t.stop)??a.stop;const o=e.map(h=>({role:j(h._getType()),content:h.text,name:h.name})),c=a.stream?await new Promise((h,I)=>{let l,k=!1,O=!1;this.completionWithRetry({...a,messages:o},{signal:t==null?void 0:t.signal,...t==null?void 0:t.options,adapter:z,responseType:"stream",onmessage:d=>{var w,f,v,N,_,T;if(((f=(w=d.data)==null?void 0:w.trim)==null?void 0:f.call(w))==="[DONE]"){if(O)return;O=!0,h(l)}else{const A=JSON.parse(d.data);l||(l={id:A.id,object:A.object,created:A.created,model:A.model,choices:[]});for(const u of A.choices)if(u!=null){let P=l.choices.find(x=>x.index===u.index);P||(P={index:u.index,finish_reason:u.finish_reason??void 0},l.choices[u.index]=P),P.message||(P.message={role:(v=u.delta)==null?void 0:v.role,content:((N=u.delta)==null?void 0:N.content)??""}),P.message.content+=((_=u.delta)==null?void 0:_.content)??"",n==null||n.handleLLMNewToken(((T=u.delta)==null?void 0:T.content)??"")}!O&&A.choices.every(u=>u.finish_reason!=null)&&(O=!0,h(l))}}}).catch(d=>{k||(k=!0,I(d))})}):await this.completionWithRetry({...a,messages:o},{signal:t==null?void 0:t.signal,...t==null?void 0:t.options}),{completion_tokens:m,prompt_tokens:s,total_tokens:i}=c.usage??{};m&&(r.completionTokens=(r.completionTokens??0)+m),s&&(r.promptTokens=(r.promptTokens??0)+s),i&&(r.totalTokens=(r.totalTokens??0)+i);const g=[];for(const h of c.choices){const I=((p=h.message)==null?void 0:p.role)??void 0,l=((y=h.message)==null?void 0:y.content)??"";g.push({text:l,message:B(I,l)})}return{generations:g,llmOutput:{tokenUsage:r}}}async getNumTokensFromMessages(e){let t=0,n=0,r=0;C(this.modelName)==="gpt-3.5-turbo"?(n=4,r=-1):C(this.modelName).startsWith("gpt-4")&&(n=3,r=1);const a=await Promise.all(e.map(async o=>{const c=await this.getNumTokens(o.text),m=await this.getNumTokens(j(o._getType())),s=o.name!==void 0?r+await this.getNumTokens(o.name):0,i=c+n+m+s;return t+=i,i}));return t+=3,{totalCount:t,countPerMessage:a}}async completionWithRetry(e,t){if(!this.client){const r=this.azureOpenAIApiKey?`https://${this.azureOpenAIApiInstanceName}.openai.azure.com/openai/deployments/${this.azureOpenAIApiDeploymentName}`:this.clientConfig.basePath,a=new E.Configuration({...this.clientConfig,basePath:r,baseOptions:{timeout:this.timeout,...this.clientConfig.baseOptions}});this.client=new E.OpenAIApi(a)}const n={adapter:R()?void 0:z,...this.clientConfig.baseOptions,...t};return this.azureOpenAIApiKey&&(n.headers={"api-key":this.azureOpenAIApiKey,...n.headers},n.params={"api-version":this.azureOpenAIApiVersion,...n.params}),this.caller.call(this.client.createChatCompletion.bind(this.client),e,n).then(r=>r.data)}_llmType(){return"openai"}_combineLLMOutput(...e){return e.reduce((t,n)=>(n&&n.tokenUsage&&(t.tokenUsage.completionTokens+=n.tokenUsage.completionTokens??0,t.tokenUsage.promptTokens+=n.tokenUsage.promptTokens??0,t.tokenUsage.totalTokens+=n.tokenUsage.totalTokens??0),t),{tokenUsage:{completionTokens:0,promptTokens:0,totalTokens:0}})}}export{Y as ChatOpenAI};
